name: Docker Buld and Run tests

on:
  pull_request:
    # run on pull request against master
    branches: [master]
  
  push:
    # run on push against master
    branches: [master]
    paths: 
      # if release.json is changed
      - 'release.json'
      # if any of the dockerfile changed
      - '**Dockerfile'
      - '**docker-cicd.yml'

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          content=$(jq -r 'tostring' release.json)
          echo "::set-output name=matrix::$content"
          echo ${{ steps.set-matrix.outputs.matrix }}

  tests:
    # needs the job matrix
    needs: generate_matrix
    runs-on: ubuntu-latest
    strategy:
      # create strategy to run jobs based on the matrix
      matrix: ${{fromJson(needs.generate_matrix.outputs.matrix)}}

    steps:
      # checksout the repo to vm
      - uses: actions/checkout@v2
      - name: Build and run test
        run: |
          export BINARY=${{ matrix.binary_version }}
          export PLATFORM=${{ matrix.os }}
          docker-compose --file ./tests/docker-compose.test.yml build
          docker-compose --file ./tests/docker-compose.test.yml run sut
  
  publish:
    if: github.event_name == 'push'
    needs: [generate_matrix, tests]
    runs-on: ubuntu-latest
    strategy:
      # create strategy to run jobs based on the matrix
      matrix: ${{fromJson(needs.generate_matrix.outputs.matrix)}}
    
    steps:
      - uses: actions/checkout@v2
      - name: Publish to registry
        uses: elgohr/Publish-Docker-Github-Action@master
        if: ${{ matrix.latest }}
        with:
          name: raj779/test
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          dockerfile: ./${{ matrix.binary_version }}/${{ matrix.os }}/Dockerfile
          tags: "${{ matrix.binary_version }}-${{ matrix.os }},latest"

            
  
